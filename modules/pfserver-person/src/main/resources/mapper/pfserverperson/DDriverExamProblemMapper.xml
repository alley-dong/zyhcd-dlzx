<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dlzx.pfserverperson.mapper.DDriverExamProblemMapper">
    
    <resultMap type="DDriverExamProblem" id="DDriverExamProblemResult">
        <result property="id"    column="id"    />
        <result property="driverId"    column="driver_id"    />
        <result property="examId"    column="exam_id"    />
        <result property="problemId"    column="problem_id"    />
        <result property="name"    column="name"    />
        <result property="type"    column="type"    />
        <result property="optionA"    column="option_a"    />
        <result property="optionB"    column="option_b"    />
        <result property="optionC"    column="option_c"    />
        <result property="optionD"    column="option_d"    />
        <result property="answer"    column="answer"    />
        <result property="score"    column="score"    />
        <result property="trueAnswer" column="true_answer"/>
    </resultMap>

    <sql id="selectDDriverExamProblemVo">
        select id, driver_id, exam_id, problem_id, name, type, option_a, option_b, option_c, option_d, answer, score,true_answer from d_driver_exam_problem
    </sql>

    <select id="selectDDriverExamProblemList" parameterType="DDriverExamProblem" resultMap="DDriverExamProblemResult">
        <include refid="selectDDriverExamProblemVo"/>
        <where>  
            <if test="driverId != null  and driverId != ''"> and driver_id = #{driverId}</if>
            <if test="examId != null  and examId != ''"> and exam_id = #{examId}</if>
            <if test="problemId != null  and problemId != ''"> and problem_id = #{problemId}</if>
            <if test="name != null  and name != ''"> and name like concat('%', #{name}, '%')</if>
            <if test="type != null "> and type = #{type}</if>
            <if test="optionA != null  and optionA != ''"> and option_a = #{optionA}</if>
            <if test="optionB != null  and optionB != ''"> and option_b = #{optionB}</if>
            <if test="optionC != null  and optionC != ''"> and option_c = #{optionC}</if>
            <if test="optionD != null  and optionD != ''"> and option_d = #{optionD}</if>
            <if test="answer != null  and answer != ''"> and answer = #{answer}</if>
            <if test="score != null "> and score = #{score}</if>
        </where>
    </select>
    
    <select id="selectDDriverExamProblemById" parameterType="String" resultMap="DDriverExamProblemResult">
        <include refid="selectDDriverExamProblemVo"/>
        where id = #{id}
    </select>

    <select id="selectDDriverExamProblemByExamId" parameterType="String" resultMap="DDriverExamProblemResult">
    SELECT name, type, option_a, option_b, option_c, option_d, answer, score,true_answer from d_driver_exam_problem
    WHERE exam_id = #{id}
    </select>
    <insert id="insertDDriverExamProblem" parameterType="DDriverExamProblem">
        insert into d_driver_exam_problem
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="driverId != null">driver_id,</if>
            <if test="examId != null">exam_id,</if>
            <if test="problemId != null">problem_id,</if>
            <if test="name != null">name,</if>
            <if test="type != null">type,</if>
            <if test="optionA != null">option_a,</if>
            <if test="optionB != null">option_b,</if>
            <if test="optionC != null">option_c,</if>
            <if test="optionD != null">option_d,</if>
            <if test="answer != null">answer,</if>
            <if test="score != null">score,</if>
            <if test="trueAnswer != null">true_answer,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">#{id},</if>
            <if test="driverId != null">#{driverId},</if>
            <if test="examId != null">#{examId},</if>
            <if test="problemId != null">#{problemId},</if>
            <if test="name != null">#{name},</if>
            <if test="type != null">#{type},</if>
            <if test="optionA != null">#{optionA},</if>
            <if test="optionB != null">#{optionB},</if>
            <if test="optionC != null">#{optionC},</if>
            <if test="optionD != null">#{optionD},</if>
            <if test="answer != null">#{answer},</if>
            <if test="score != null">#{score},</if>
            <if test="trueAnswer != null">#{trueAnswer},</if>
         </trim>
    </insert>

    <update id="updateDDriverExamProblem" parameterType="DDriverExamProblem">
        update d_driver_exam_problem
        <trim prefix="SET" suffixOverrides=",">
            <if test="driverId != null">driver_id = #{driverId},</if>
            <if test="examId != null">exam_id = #{examId},</if>
            <if test="problemId != null">problem_id = #{problemId},</if>
            <if test="name != null">name = #{name},</if>
            <if test="type != null">type = #{type},</if>
            <if test="optionA != null">option_a = #{optionA},</if>
            <if test="optionB != null">option_b = #{optionB},</if>
            <if test="optionC != null">option_c = #{optionC},</if>
            <if test="optionD != null">option_d = #{optionD},</if>
            <if test="answer != null">answer = #{answer},</if>
            <if test="score != null">score = #{score},</if>
            <if test="trueAnswer != null">trueAnswer = #{true_answer},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteDDriverExamProblemById" parameterType="String">
        delete from d_driver_exam_problem where id = #{id}
    </delete>

    <delete id="deleteDDriverExamProblemByIds" parameterType="String">
        delete from d_driver_exam_problem where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <insert id="insertDDriverExamProblemList">
        insert into d_driver_exam_problem( id, driver_id,exam_id, problem_id, name, type, option_a, option_b, option_c, option_d, answer, score ,true_answer) values
        <foreach item="item" index="index" collection="list" separator=",">
            (#{item.id},#{item.driverId},#{item.examId},#{item.problemId},#{item.name},#{item.type},#{item.optionA},#{item.optionB},#{item.optionC},#{item.optionD},#{item.answer},#{item.score},#{item.trueAnswer})
        </foreach>
    </insert>

</mapper>